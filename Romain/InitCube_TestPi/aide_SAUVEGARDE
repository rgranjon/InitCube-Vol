


CE FICHIER SERT UNIQUEMENT POUR INCLURE DES TESTS CONCERNANT LA SAUVEGARDE AFIN DE NE PAS SURCHARGER 'SAUVEGARDE.CPP'



/////////*ALGO SAUVEGARDE*/

    Fichier présent ?
        si oui : Ouvrir le fichier XML
        si non : Créer le fichier XML et son arborescence
    Ecrire chacune des valeurs dans le fichier XML
    Sauvegarder le fichier XML
    Fermer le fichier XML

/////////*TEST 1*/

/////////*SOLUTION 1*/

bool Sauvegarde::enregistrerMesure() {
    pugi::xml_document doc;
    pugi::xml_parse_result result = doc.load_file("initcube.xml");
    cout << "La variable 'result' contient : " << result << endl;
    if (result == "No error") {
        cout << "NO ERROR" << endl;
        return true; // Pour retourner un booléen
    }
    if (result != "No error") {
        cout << "ERROR" << endl;
        return false; // Pour retourner un booléen
    }
    if (result == 0) {
        cout << "resultat == 0" << endl;
        return true; // Pour retourner un booléen
    }
    if (result == 1) {
        cout << "resultat == 1" << endl;
        return true; // Pour retourner un booléen
    }
}

/////////*SOLUTION 2*/

bool Sauvegarde::enregistrerMesure() {
    pugi::xml_document doc;
    pugi::xml_parse_result result = doc.load_file("initcube.xml");
    const char* resultat;
    resultat = result.description();
    cout << "La variable 'resultat' contient : " << resultat << endl;
    if (resultat == "No error") {
        cout << "NO ERROR" << endl;
        return true; // Pour retourner un booléen
    }
    if (resultat != "No error") {
        cout << "ERROR" << endl;
        return false; // Pour retourner un booléen
    }
    if (resultat == 0) {
        cout << "resultat == 0" << endl;
        return true; // Pour retourner un booléen
    }
    if (resultat == 1) {
        cout << "resultat == 1" << endl;
        return true; // Pour retourner un booléen
    }
}

/////////*TEST 2*/

/////////*SOLUTION 1*/ Utilise le nom du fichier xml
// COMPILATION OUI
// FICHIER TROUVE OUI
// OUVERTURE DU FICHIER OUI
// NOM DE FICHIER AUTOMATIQUE NON

bool Sauvegarde::enregistrerMesure() {
    pugi::xml_document doc;
    if (doc.load_file("initcube.xml")) { // Si le fichier existe
        cout << "Le fichier initcube.xml est présent dans le répertoire contenant l'exécutable du projet" << endl;
        //OUVRIR LE FICHIER XML
        system("sudo nano initcube.xml");
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return true;
    } else {
        cout << "Le fichier initcube.xml n'est pas présent dans le répertoire contenant l'exécutable du projet" << endl;
        //CREER LE FICHIER XML
        //OUVRIR LE FICHIER XML
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return false;
    }
}

/////////*SOLUTION 2*/ Utilise la variable 'xmlFile'
// COMPILATION NON
// FICHIER TROUVE OUI
// OUVERTURE DU FICHIER NON
// NOM DE FICHIER AUTOMATIQUE OUI

bool Sauvegarde::enregistrerMesure() {

    pugi::xml_document doc;
    const char* xmlFile = "initcube.xml"; // POUR TEST VALIDE
    //    const char* xmlFile = "nomDuFichierInexistant.xml"; // POUR TEST ERREUR
    if (doc.load_file(xmlFile)) { // Si le fichier existe
        cout << "Le fichier xml " << xmlFile << " est présent dans le répertoire contenant l'exécutable du projet" << endl;
        //OUVRIR LE FICHIER XML
//        system("sudo nano " + xmlFile); // ERREUR DE COMPILATION
//        system("sudo nano " & xmlFile); // ERREUR DE COMPILATION
//        system("sudo nano " xmlFile); // ERREUR DE COMPILATION
//        system("sudo nano xmlFile"); // ERREUR DE COMPILATION
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return true;
    } else {
        cout << "Le fichier xml " << xmlFile << " n'est pas présent dans le répertoire contenant l'exécutable du projet" << endl;
        //CREER LE FICHIER XML
        //OUVRIR LE FICHIER XML
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return false;
    }
}

/////////*SOLUTION 3*/ Utilise la variable 'commande'
// COMPILATION OUI
// FICHIER TROUVE OUI
// OUVERTURE DU FICHIER OUI
// NOM DE FICHIER AUTOMATIQUE NON

bool Sauvegarde::enregistrerMesure() {
    pugi::xml_document doc;
    const char* commande = "sudo nano initcube.xml";
    if (doc.load_file("initcube.xml")) { // Si le fichier existe
        cout << "Le fichier initcube.xml est présent dans le répertoire contenant l'exécutable du projet" << endl;
        //OUVRIR LE FICHIER XML
        system(commande);
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return true;
    } else {
        cout << "Le fichier initcube.xml n'est pas présent dans le répertoire contenant l'exécutable du projet" << endl;
        //CREER LE FICHIER XML
        //OUVRIR LE FICHIER XML
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return false;
    }
}

/////////*SOLUTION 4*/ Utilise les variables 'xmlFile' et 'commande'
// COMPILATION OUI
// FICHIER TROUVE OUI
// OUVERTURE DU FICHIER OUI
// NOM DE FICHIER AUTOMATIQUE OUI

bool Sauvegarde::enregistrerMesure() {
    pugi::xml_document doc;
    char commande[256];
    char ouvertureFichier[] = "sudo nano";
    char xmlFile[] = "initcube.xml"; // POUR TEST VALIDE
    //    char* xmlFile[] = "nomDuFichierInexistant.xml"; // POUR TEST ERREUR
    sprintf(commande, "%s %s", ouvertureFichier, xmlFile);
    if (doc.load_file(xmlFile)) { // Si le fichier existe
        cout << "Le fichier initcube.xml est présent dans le répertoire contenant l'exécutable du projet" << endl;
        //OUVRIR LE FICHIER XML
        system(commande);
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return true;
    } else {
        cout << "Le fichier initcube.xml n'est pas présent dans le répertoire contenant l'exécutable du projet" << endl;
        //CREER LE FICHIER XML
        //OUVRIR LE FICHIER XML
        //INSERER LES VALEURS DANS LE FICHIER XML
        //SAUVEGARDER LE FICHIER XML
        //FERMER LE FICHIER XML
        return false;
    }
}

//CREER UN FICHIER XML
system("touch nomDuFichier.xml");

//FERMER UN FICHIER XML
?????